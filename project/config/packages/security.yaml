# https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
# activate different ways to authenticate
# https://symfony.com/doc/current/security.html#firewalls-authentication
# https://symfony.com/doc/current/security/impersonating_user.html
# Easy way to control access for large sections of your site
# Note: Only the *first* access control that matches will be used
security:
    providers:
        user_db_provider:
            entity:
                class: App\Entity\User
                property: apiKey
        in_memory:
            memory:
                users:
                    admin:
                        #USE TO GENERATE: ./bin/console security:encode-password
                        password: $2y$12$nfjD193kPySJu5GRk.M6DeMCKP1MeSNE88gP7AqQrVdodp2DUObgy
                        roles: 'ROLE_ADMIN'
    role_hierarchy:
        ROLE_ADMIN: [ROLE_API]
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api/
            guard:
                authenticators:
                    - App\Security\TokenAuthenticator
            provider: user_db_provider
        main:
            http_basic: true
            provider: in_memory
    access_control:
        - { path: ^/api/, roles: ROLE_API }
        - { path: ^/admin/, roles: ROLE_ADMIN }
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt
            cost: 12
